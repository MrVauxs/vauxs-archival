# From https://github.com/League-of-Foundry-Developers/FoundryVTT-Module-Template/blob/master/.github/workflows/main.yml
name: Release Creation

on:
    release:
        types: [published]

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3

            # get part of the tag after the `v`
            - name: Extract tag version number
              id: get_version
              run: echo "version-without-v=${GITHUB_REF_NAME#v}" >> "$GITHUB_OUTPUT"

            # Substitute the Manifest and Download URLs in the `module.json`.
            - name: Substitute Manifest and Download Links For Versioned Ones
              id: sub_manifest_link_version
              uses: devops-actions/variable-substitution@v1.2
              with:
                  files: "module.json"
              env:
                  version: ${{steps.get_version.outputs.version-without-v}}
                  url: https://github.com/${{github.repository}}
                  manifest: https://github.com/${{github.repository}}/releases/latest/download/module.json
                  download: https://github.com/${{github.repository}}/releases/download/${{github.event.release.tag_name}}/module.zip

            # Install packages.
            - run: npm ci

            # Build distribution.
            - run: npm run build

            # Create a zip file with all files required by the module to add to the release.
            - run: zip -r ./module.zip module.json index.js index.js.map style.css assets/ dist/ lang/ packs/ LICENSE AUTHORS

            # Create a release for this specific version.
            - name: Update Release with Files
              id: create_version_release
              uses: ncipollo/release-action@v1.14.0
              with:
                  allowUpdates: true # Set this to false if you want to prevent updating existing releases.
                  name: ${{ github.event.release.name }}
                  draft: false
                  prerelease: false
                  token: ${{ secrets.GITHUB_TOKEN }}
                  artifacts: "./module.json, ./module.zip"
                  tag: ${{ github.event.release.tag_name }}
                  body: ${{ github.event.release.body }}

            # Upload workflow
            - uses: actions/upload-artifact@v4
              with:
                  name: manifest
                  path: module.json
    upload:
        needs: build
        runs-on: ubuntu-latest
        if: "!github.event.release.prerelease"
        steps:
            - name: Check for login info
              env:
                  super_secret: ${{ secrets.FOUNDRY_ADMIN_USERNAME }}
              if: ${{ env.super_secret == '' }}
              run: 'echo "echo The FoundryVTT login secrets have not been made; echo please go to \"settings \> secrets \> actions\" to create it"'

            - uses: actions/download-artifact@v4
              with:
                  name: manifest

            # Publish to FoundryVTT
            - name: Publish to Foundry VTT Repo
              id: publish_foundry_repo
              run: npx @ghost-fvtt/foundry-publish@3.0.0
              env:
                  FVTT_MANIFEST_PATH: "module.json"
                  FVTT_USERNAME: ${{ secrets.FOUNDRY_ADMIN_USERNAME }}
                  FVTT_PASSWORD: ${{ secrets.FOUNDRY_ADMIN_PASSWORD }}
                  FVTT_MANIFEST_URL: https://github.com/${{github.repository}}/releases/download/${{github.event.release.tag_name}}/module.json
              if: ${{ env.FVTT_USERNAME }}

